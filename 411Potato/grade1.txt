25/25% - Mechanics (submitted, compiles, readme)
  5/5% - submitted on time
  5/5% - multiple commits
  5/5% - readme present and informative
  5/5% - compiles [1,2]
  5/5% - fills memory with assembled codes [3]
8/ 9% - I/O
  3/3% - Wait for enter each clock cycle
  2/3% - Print one of M, R, A, D, F or N each cycle [4]
  3/3% - On A or D, wait for a response
10/18% - Decoding
  1/3% - Opcode/func/Cfn decoded [5]
  0/3% - Register 0 returns 0, even after write [6]
  3/3% - Correct register numbers decoded for rs, rt, rd, as needed
  3/3% - Unsigned/positive immediate extended with 0's
  0/3% - Negative immediate sign extended [7]
  3/3% - Jump address decoded
10/12% - C-type
  3/3% - spd, rot, fir add register value to immediate
  3/3% - spd, rot, fir output correct letter and value
  3/3% - ascn, dscn output correct letter
  1/3% - ascn, dscn assign value into given register [8,9]
17/18% - I-type
  3/3% - ALU ops (addi, addiu, andi, ori, xori, lui) do correct operations
  2/3% - ALU ops read from and write to correct registers [9]
  3/3% - Branch (beq, bne, blez, bgtz) branch on correct conditions
  3/3% - Branch to correct target
  3/3% - sw, lw to correct address (register value plus immediate)
  3/3% - sw, lw can write then read values
5/ 6% - J-type
  3/3% - j, jal jump to correct target
  2/3% - jal writes return address to $31 [10]
9/12% - R-type
  3/3% - ALU ops (add, addu, sub, subu, and, or, xor, nor) do correct ops
  2/3% - ALU ops read from and write to correct registers [9]
  3/3% - jr, jalr jump to correct target
  1/3% - jalr writes return address to $31 [10,11]
------
84/100% Total

[1] No make rule for simulator, compile errors when I add one

[2] No points off for this, but .c is usually reserved for C code. C++
is one of .cpp, .cxx, .cc, or (less common since it's case sensitive) .C

[3] This form of initialization only works when creating a variable
(initialize, not for assignment)

[4] Not printing on robot commands due to opcode problems

[5] initFunctionMap operates on copy, doesn't actually init

[6] registers not initialized, register 0 changed on update

[7] Negatives never sign extended

[8] sscanf needs address (&) of operands

[9] Can't pass System by value if it might be changed by the operation

[10] return address off by one

[11] jalr gets wrong address when jumping to $31
